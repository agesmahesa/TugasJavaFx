package tugasjavafx;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Window;

public class TugasJavaFX extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        primaryStage.setTitle("Registration Form");
        
        GridPane gridPane = createRegistrationFormPane();
        addUIControls(gridPane);
        Scene scene = new Scene(gridPane, 750, 400);	
        primaryStage.setScene(scene);
        primaryStage.show();
    }
  private GridPane createRegistrationFormPane() {
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(40, 40, 40, 40));
        gridPane.setHgap(15);
        gridPane.setVgap(15);

        ColumnConstraints columnOneConstraints = new ColumnConstraints(100, 100, Double.MAX_VALUE);
        columnOneConstraints.setHalignment(HPos.RIGHT);
        ColumnConstraints columnTwoConstrains = new ColumnConstraints(150, 150, Double.MAX_VALUE);
        columnTwoConstrains.setHgrow(Priority.ALWAYS);
        gridPane.getColumnConstraints().addAll(columnOneConstraints, columnTwoConstrains);

        return gridPane;
    }

    private void addUIControls(GridPane gridPane) {
        Label headerLabel = new Label("Register");
        headerLabel.setFont(Font.font("Calibri", FontWeight.BOLD, 18));
        gridPane.add(headerLabel, 0,0,2,1);
        GridPane.setHalignment(headerLabel, HPos.LEFT);
        GridPane.setMargin(headerLabel, new Insets(10, 0, 10,0));

        Label FNLabel = new Label("First Name");
        gridPane.add(FNLabel, 0, 1);

        TextField FNField = new TextField();
        FNField.setPrefHeight(40);
        gridPane.add(FNField, 1, 1);

        Label LNLabel = new Label("Last Name");
        gridPane.add(LNLabel, 0, 2);

        TextField LNField = new TextField();
        LNField.setPrefHeight(40);
        gridPane.add(LNField, 1, 2);

        Label EmailLabel = new Label("E-Mail Address");
        gridPane.add(EmailLabel, 0, 3);

        TextField EmailField  = new TextField();
        EmailField.setPrefHeight(40);
        gridPane.add(EmailField , 1, 3);
        
        Label ContactLabel = new Label("Contact No");
        gridPane.add(ContactLabel, 0, 4);
        
        TextField ContactField  = new TextField();
        ContactField.setPrefHeight(40);
        gridPane.add(ContactField , 1, 4);
        
        Label pwLabel = new Label("Password");
        gridPane.add(pwLabel, 0, 5);

        PasswordField pwField = new PasswordField();
        pwField.setPrefHeight(40);
        gridPane.add(pwField, 1, 5);
        
        Label ConfirmPwLabel = new Label("Confirm Password");
        gridPane.add(ConfirmPwLabel, 0, 6);
        
        PasswordField ConfirmPasswordLabel = new PasswordField();
        ConfirmPasswordLabel.setPrefHeight(40);
        gridPane.add(ConfirmPasswordLabel, 1, 6);

        Button submitButton = new Button("Register");
        submitButton.setPrefHeight(40);
        submitButton.setDefaultButton(true);
        submitButton.setPrefWidth(100);
        gridPane.add(submitButton, 0, 7);
        GridPane.setHalignment(submitButton, HPos.CENTER);
        GridPane.setMargin(submitButton, new Insets(20, 0, 20,0));

        submitButton.setOnAction(new EventHandler<ActionEvent>() {
        @Override
        public void handle(ActionEvent event) {
            if(FNField.getText().isEmpty()) {
                showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!",
                        "First Name field can not empty!");
                return;
            }
            if(LNField.getText().isEmpty()) {
                showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!",
                        "Last Name field can not empty!");
                return;
            }
            if(EmailField.getText().isEmpty()) {
                showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!",
                        "E-mail Address field can not empty!");
                return;
            }
            if(ContactField.getText().isEmpty()) {
                showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!",
                        "Contact No field can not empty!");
                return;
            }
            if(pwField.getText().isEmpty()) {
                showAlert(Alert.AlertType.ERROR, gridPane.getScene().getWindow(), "Form Error!",
                        "Password field can not empty!");
                return;
            }
                showAlert(Alert.AlertType.CONFIRMATION, gridPane.getScene().getWindow(),
                        "Registration Successful!","Welcome " + FNField.getText());
        }
        });
    }
    private void showAlert(Alert.AlertType alertType, Window owner, String title, String message) {
        Alert alert = new Alert(alertType);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.initOwner(owner);
        alert.show();
    } 
    public static void main(String[] args) {
        launch(args);
    }   
}
